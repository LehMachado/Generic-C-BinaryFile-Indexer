name: C/C++ Compile and Test - CI

on:
  push:
      paths:
        - src/**
        - .github/**
      branches: [ main ]
  pull_request:
      branches: [ main ]

jobs:
  cpp_compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Compile
        run: |
          cd src/c_templates
          make main.test.cpp


  lint_cpp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: lint
        uses: github/super-linter@v4
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_CPP: true
          VALIDATE_CLANG_FORMAT: true


  lint_py:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          ls
          pip install -r requirements.txt
          pip install flake8
          pip install pep8-naming
          pip install --upgrade pep8-naming

      # https://flake8.pycqa.org/en/latest/user/error-codes.html
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          cd src
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 . --count --ignore=E501,F541 --exit-zero --max-complexity=10 --max-line-length=120 --statistics


  test_py:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Python Unit Tests
        run: |
          cd src
          python -m unittest
